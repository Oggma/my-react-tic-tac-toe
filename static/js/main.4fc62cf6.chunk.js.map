{"version":3,"sources":["components/Square.js","components/Board.js","components/History.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","isSelected","onClick","value","Board","i","this","squares","selectedSquare","bordRows","Array","rowSquares","j","push","renderSquare","React","Component","History","checked","createRef","state","order","handleSwitch","bind","event","setState","target","history","map","step","move","desc","pos","movePos","onJumpTo","col","row","type","onChange","reverse","calculateWinner","lines","length","a","b","c","calculateLastMovePosition","parseInt","index","Game","fill","stepNumper","xIsNext","slice","concat","status","current","winner","handleClick","jumpTo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fc62cf6.chunk.js","sourcesContent":["function Square(props) {\r\n    return (\r\n        <button\r\n            className={props.isSelected ? \"square selected\" : \"square\"}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                key={i}\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n                isSelected={i === this.props.selectedSquare}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const bordRows = new Array(3);\r\n        for (var i = 0; i < 9;) {\r\n            var rowSquares = new Array(3);\r\n            for (let j = 0; j < 3; i++, j++) {\r\n                rowSquares.push(this.renderSquare(i));\r\n            }\r\n            bordRows.push(<div className=\"board-row\" key={i/3}> {rowSquares} </div>)\r\n        }\r\n        return (\r\n            <div>\r\n                {bordRows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n\r\nclass History extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.checked = React.createRef();\r\n        this.state = {\r\n            order: false\r\n        }\r\n        this.handleSwitch = this.handleSwitch.bind(this);\r\n    }\r\n\r\n    handleSwitch(event) {\r\n        this.setState( {\r\n            order: event.target.checked\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.props.history.map((step, move) => {\r\n            const desc = move ?\r\n                'Jumo to move #' + move :\r\n                'Jump to start';\r\n            const pos = this.props.history[move].movePos;\r\n            return (\r\n                <li key={move}>\r\n                    <div className=\"history-item\">\r\n                        <button className=\"btn-move-jump\" onClick={() => this.props.onJumpTo(move)}>{desc}</button>\r\n                        {move ? <div className=\"move-pos\">{'(' + pos.col + ',' + pos.row + ')'}</div> : ''}\r\n                    </div>\r\n                </li>\r\n            )\r\n        });     \r\n        return (\r\n            <div>\r\n                <label className=\"switch\">\r\n                    <input type=\"checkbox\" checked={this.state.order} onChange={this.handleSwitch}/>\r\n                    <span className=\"slider round\"></span>\r\n                    <div className=\"switch-text\"> {this.state.order ? 'Descending' : 'Ascending'} </div>\r\n                </label>            \r\n                {this.state.order ? history.reverse() : history}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default History;","import React from 'react';\r\nimport Board from './Board'\r\nimport History from './History';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n                movePos: null,\r\n            }],\r\n            stepNumper: 0,\r\n            xIsNext: true,\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumper + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                movePos: calculateLastMovePosition(i),\r\n            }]),\r\n            selectedSquare: i,\r\n            stepNumper: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumper: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumper];\r\n        const winner = calculateWinner(current.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = winner + ' is winner!';\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }        \r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                        selectedSquare={current.movePos?.index}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol><History history={history} onJumpTo={(move) => this.jumpTo(move)} /></ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction calculateLastMovePosition(i) {\r\n    return {\r\n        col: ((i % 3) + 1),\r\n        row: (parseInt(i / 3) + 1),\r\n        index: i\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nclass App extends React.Component {\n    render() {\n        return <Game />;\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}